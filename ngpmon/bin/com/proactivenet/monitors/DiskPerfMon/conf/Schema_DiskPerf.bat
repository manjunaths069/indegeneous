REM Check if its a Clean or an Upgrade Installation

sqli -c "SELECT * FROM SYSTABLE B WHERE B.TABLE_NAME = 'SOLDISKPERF_STATS';" > out.txt

if %errorlevel% == 101 (

REM Clean Installation for Monitor = Solaris Disk Performance
REM Schema & PruneCntl Statements for Monitor = Solaris Disk Performance ,moTypeId = 28001

echo Creating tables SOLDISKPERF_STATS, SOLDISKPERF_RT, SOLDISKPERF_BL
echo Creating Prune Control entries for SOLDISKPERF_STATS  AND  entries for SOLDISKPERF_RT
sqli "CREATE TABLE SOLDISKPERF_STATS (ITEMID int,TIMERECORDED int,READCNT int,WRITECNT int,READKB int,WRITEKB int,AVGTXWAITQ int,INCOMPAVGTX int,AVGSRVCTIME int,TXWAITTIME int,BUSYPCT int,AVAILABILITY int,PRIMARY KEY ("ITEMID", "TIMERECORDED") WITH HASH SIZE 10);"

REM If the STATS table creation failed exit with errorcode
if %errorlevel% == 1 (
    exit /b 117
)

sqli "create        index SOLDISKPERF_STATS_N3 on SOLDISKPERF_STATS (TIMERECORDED);"

sqli "CREATE TABLE SOLDISKPERF_RT (ITEMID int, FROMTIME int, TOTIME int, READCNT_HIGH int, READCNT_AVG  int, READCNT_LOW  int, WRITECNT_HIGH int, WRITECNT_AVG  int, WRITECNT_LOW  int, READKB_HIGH int, READKB_AVG  int, READKB_LOW  int, WRITEKB_HIGH int, WRITEKB_AVG  int, WRITEKB_LOW  int, AVGTXWAITQ_HIGH int, AVGTXWAITQ_AVG  int, AVGTXWAITQ_LOW  int, INCOMPAVGTX_HIGH int, INCOMPAVGTX_AVG  int, INCOMPAVGTX_LOW  int, AVGSRVCTIME_HIGH int, AVGSRVCTIME_AVG  int, AVGSRVCTIME_LOW  int, TXWAITTIME_HIGH int, TXWAITTIME_AVG  int, TXWAITTIME_LOW  int, BUSYPCT_HIGH int, BUSYPCT_AVG  int, BUSYPCT_LOW  int, AVAILABILITY_HIGH int, AVAILABILITY_AVG  int, AVAILABILITY_LOW  int, NUMPOINTS int, NUMSECS   int, PRIMARY KEY ("ITEMID", "FROMTIME") WITH HASH SIZE 10);"

sqli "create index SOLDISKPERF_RT_N3 on SOLDISKPERF_RT (FROMTIME,TOTIME);"

sqli "CREATE TABLE SOLDISKPERF_BL (ITEMID   int,TIMESLOT int,READCNT_HIGH int,READCNT_AVG  int,READCNT_LOW  int,WRITECNT_HIGH int,WRITECNT_AVG  int,WRITECNT_LOW  int,READKB_HIGH int,READKB_AVG  int,READKB_LOW  int,WRITEKB_HIGH int,WRITEKB_AVG  int,WRITEKB_LOW  int,AVGTXWAITQ_HIGH int,AVGTXWAITQ_AVG  int,AVGTXWAITQ_LOW  int,INCOMPAVGTX_HIGH int,INCOMPAVGTX_AVG  int,INCOMPAVGTX_LOW  int,AVGSRVCTIME_HIGH int,AVGSRVCTIME_AVG  int,AVGSRVCTIME_LOW  int,TXWAITTIME_HIGH int,TXWAITTIME_AVG  int,TXWAITTIME_LOW  int,BUSYPCT_HIGH int,BUSYPCT_AVG  int,BUSYPCT_LOW  int,AVAILABILITY_HIGH int,AVAILABILITY_AVG  int,AVAILABILITY_LOW  int,NUMPOINTS int,NUMWEEKS int,PRIMARY KEY ("ITEMID", "TIMESLOT") WITH HASH SIZE 10);"

sqli "INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('SOLDISKPERF_STATS', 'TIMERECORDED', 24);"

sqli "INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('SOLDISKPERF_RT', 'FROMTIME', 2160);"

) else (

REM Upgrade Installation for Monitor = Solaris Disk Performance

REM sqli -c "
REM SELECT * FROM SYSCOLUMN A, SYSTABLE B WHERE A.TABLE_ID = B.TABLE_ID AND B.TABLE_NAME = 'TABLENAME' AND A.COLUMN_NAME = 'COLUMNNAME';
REM "
REM if %errorlevel% == 101 (

REM alter table add column statement here
echo Upgrade installation

REM )

)
