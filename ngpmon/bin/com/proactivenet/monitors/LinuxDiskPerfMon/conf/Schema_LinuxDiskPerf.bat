REM Check if its a Clean or an Upgrade Installation

sqli -c "SELECT * FROM SYSTABLE B WHERE B.TABLE_NAME = 'LNXDISKPERF_STATS';" > out.txt

if %errorlevel% == 101 (

REM Clean Installation for Monitor = Linux Disk Performance
REM Schema & PruneCntl Statements for Monitor = Linux Disk Performance ,moTypeId = 29201

echo Creating tables LNXDISKPERF_STATS, LNXDISKPERF_RT, LNXDISKPERF_BL
echo Creating Prune Control entries for LNXDISKPERF_STATS  AND  entries for LNXDISKPERF_RT
sqli "CREATE TABLE LNXDISKPERF_STATS (ITEMID int,TIMERECORDED int,TRFSEC int,READPSEC int,WRITEPSEC int,RBLKPSEC int,WBLKPSEC int,AVAILABILITY int,PRIMARY KEY ("ITEMID", "TIMERECORDED") WITH HASH SIZE 10);"

REM If the STATS table creation failed exit with errorcode
if %errorlevel% == 1 (
    exit /b 117
)

sqli "create        index LNXDISKPERF_STATS_N3 on LNXDISKPERF_STATS (TIMERECORDED);"

sqli "CREATE TABLE LNXDISKPERF_RT (ITEMID int, FROMTIME int, TOTIME int, TRFSEC_HIGH int, TRFSEC_AVG  int, TRFSEC_LOW  int, READPSEC_HIGH int, READPSEC_AVG  int, READPSEC_LOW  int, WRITEPSEC_HIGH int, WRITEPSEC_AVG  int, WRITEPSEC_LOW  int, RBLKPSEC_HIGH int, RBLKPSEC_AVG  int, RBLKPSEC_LOW  int, WBLKPSEC_HIGH int, WBLKPSEC_AVG  int, WBLKPSEC_LOW  int, AVAILABILITY_HIGH int, AVAILABILITY_AVG  int, AVAILABILITY_LOW  int, NUMPOINTS int, NUMSECS   int, PRIMARY KEY ("ITEMID", "FROMTIME") WITH HASH SIZE 10);"

sqli "create index LNXDISKPERF_RT_N3 on LNXDISKPERF_RT (FROMTIME,TOTIME);"

sqli "CREATE TABLE LNXDISKPERF_BL (ITEMID   int,TIMESLOT int,TRFSEC_HIGH int,TRFSEC_AVG  int,TRFSEC_LOW  int,READPSEC_HIGH int,READPSEC_AVG  int,READPSEC_LOW  int,WRITEPSEC_HIGH int,WRITEPSEC_AVG  int,WRITEPSEC_LOW  int,RBLKPSEC_HIGH int,RBLKPSEC_AVG  int,RBLKPSEC_LOW  int,WBLKPSEC_HIGH int,WBLKPSEC_AVG  int,WBLKPSEC_LOW  int,AVAILABILITY_HIGH int,AVAILABILITY_AVG  int,AVAILABILITY_LOW  int,NUMPOINTS int,NUMWEEKS int,PRIMARY KEY ("ITEMID", "TIMESLOT") WITH HASH SIZE 10);"

sqli "INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('LNXDISKPERF_STATS', 'TIMERECORDED', 192);"

sqli "INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('LNXDISKPERF_RT', 'FROMTIME', 2160);"

) else (

REM Upgrade Installation for Monitor = Linux Disk Performance

REM sqli -c "
REM SELECT * FROM SYSCOLUMN A, SYSTABLE B WHERE A.TABLE_ID = B.TABLE_ID AND B.TABLE_NAME = 'TABLENAME' AND A.COLUMN_NAME = 'COLUMNNAME';
REM "
REM if %errorlevel% == 101 (

REM alter table add column statement here
echo Upgrade installation

REM )

)
