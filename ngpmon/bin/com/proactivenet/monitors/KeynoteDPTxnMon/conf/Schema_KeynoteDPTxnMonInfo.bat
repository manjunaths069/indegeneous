REM Check if its a Clean or an Upgrade Installation

sqli -c "SELECT * FROM SYSTABLE B WHERE B.TABLE_NAME = 'KEYNOTEDPTXN_STATS';" > out.txt

if %errorlevel% == 101 (

REM Clean Installation for Monitor = Transaction Perspective (Data Pulse)
REM Schema & PruneCntl Statements for Monitor = Transaction Perspective (Data Pulse) ,moTypeId = 41037

echo Creating tables KEYNOTEDPTXN_STATS, KEYNOTEDPTXN_RT, KEYNOTEDPTXN_BL
echo Creating Prune Control entries for KEYNOTEDPTXN_STATS  AND  entries for KEYNOTEDPTXN_RT
sqli "CREATE TABLE KEYNOTEDPTXN_STATS (ITEMID int,TIMERECORDED int,SVC_AVAIL int,MEASURE_ERR int,MEASURE_TOTAL int,MEASURE_TOT_STD int,MEASURE_TOT_MAX int,MEASURE_TOT_MIN int,DNS_LOOKUP int,INIT_CONN int,INIT_CONN_STD int,INIT_CONN_MAX int,INIT_CONN_MIN int,FIRST_BYTE int,CONTENT int,TXN_AVAIL int,PRIMARY KEY ("ITEMID", "TIMERECORDED") WITH HASH SIZE 10);"

REM If the STATS table creation failed exit with errorcode
if %errorlevel% == 1 (
    exit /b 117
)

sqli "create        index KEYNOTEDPTXN_STATS_N3 on KEYNOTEDPTXN_STATS (TIMERECORDED);"

sqli "CREATE TABLE KEYNOTEDPTXN_RT (ITEMID int, FROMTIME int, TOTIME int, SVC_AVAIL_HIGH int, SVC_AVAIL_AVG  int, SVC_AVAIL_LOW  int, MEASURE_ERR_HIGH int, MEASURE_ERR_AVG  int, MEASURE_ERR_LOW  int, MEASURE_TOTAL_HIGH int, MEASURE_TOTAL_AVG  int, MEASURE_TOTAL_LOW  int, MEASURE_TOT_STD_HIGH int, MEASURE_TOT_STD_AVG  int, MEASURE_TOT_STD_LOW  int, MEASURE_TOT_MAX_HIGH int, MEASURE_TOT_MAX_AVG  int, MEASURE_TOT_MAX_LOW  int, MEASURE_TOT_MIN_HIGH int, MEASURE_TOT_MIN_AVG  int, MEASURE_TOT_MIN_LOW  int, DNS_LOOKUP_HIGH int, DNS_LOOKUP_AVG  int, DNS_LOOKUP_LOW  int, INIT_CONN_HIGH int, INIT_CONN_AVG  int, INIT_CONN_LOW  int, INIT_CONN_STD_HIGH int, INIT_CONN_STD_AVG  int, INIT_CONN_STD_LOW  int, INIT_CONN_MAX_HIGH int, INIT_CONN_MAX_AVG  int, INIT_CONN_MAX_LOW  int, INIT_CONN_MIN_HIGH int, INIT_CONN_MIN_AVG  int, INIT_CONN_MIN_LOW  int, FIRST_BYTE_HIGH int, FIRST_BYTE_AVG  int, FIRST_BYTE_LOW  int, CONTENT_HIGH int, CONTENT_AVG  int, CONTENT_LOW  int, TXN_AVAIL_HIGH int, TXN_AVAIL_AVG  int, TXN_AVAIL_LOW  int, NUMPOINTS int, NUMSECS   int, PRIMARY KEY ("ITEMID", "FROMTIME") WITH HASH SIZE 10);"

sqli "create index KEYNOTEDPTXN_RT_N3 on KEYNOTEDPTXN_RT (FROMTIME,TOTIME);"

sqli "CREATE TABLE KEYNOTEDPTXN_BL (ITEMID   int,TIMESLOT int,SVC_AVAIL_HIGH int,SVC_AVAIL_AVG  int,SVC_AVAIL_LOW  int,MEASURE_ERR_HIGH int,MEASURE_ERR_AVG  int,MEASURE_ERR_LOW  int,MEASURE_TOTAL_HIGH int,MEASURE_TOTAL_AVG  int,MEASURE_TOTAL_LOW  int,MEASURE_TOT_STD_HIGH int,MEASURE_TOT_STD_AVG  int,MEASURE_TOT_STD_LOW  int,MEASURE_TOT_MAX_HIGH int,MEASURE_TOT_MAX_AVG  int,MEASURE_TOT_MAX_LOW  int,MEASURE_TOT_MIN_HIGH int,MEASURE_TOT_MIN_AVG  int,MEASURE_TOT_MIN_LOW  int,DNS_LOOKUP_HIGH int,DNS_LOOKUP_AVG  int,DNS_LOOKUP_LOW  int,INIT_CONN_HIGH int,INIT_CONN_AVG  int,INIT_CONN_LOW  int,INIT_CONN_STD_HIGH int,INIT_CONN_STD_AVG  int,INIT_CONN_STD_LOW  int,INIT_CONN_MAX_HIGH int,INIT_CONN_MAX_AVG  int,INIT_CONN_MAX_LOW  int,INIT_CONN_MIN_HIGH int,INIT_CONN_MIN_AVG  int,INIT_CONN_MIN_LOW  int,FIRST_BYTE_HIGH int,FIRST_BYTE_AVG  int,FIRST_BYTE_LOW  int,CONTENT_HIGH int,CONTENT_AVG  int,CONTENT_LOW  int,TXN_AVAIL_HIGH int,TXN_AVAIL_AVG  int,TXN_AVAIL_LOW  int,NUMPOINTS int,NUMWEEKS int,PRIMARY KEY ("ITEMID", "TIMESLOT") WITH HASH SIZE 10);"

sqli "INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('KEYNOTEDPTXN_STATS', 'TIMERECORDED', 24);"

sqli "INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('KEYNOTEDPTXN_RT', 'FROMTIME', 2160);"

) else (

REM Upgrade Installation for Monitor = Transaction Perspective (Data Pulse)

REM sqli -c "
REM SELECT * FROM SYSCOLUMN A, SYSTABLE B WHERE A.TABLE_ID = B.TABLE_ID AND B.TABLE_NAME = 'TABLENAME' AND A.COLUMN_NAME = 'COLUMNNAME';
REM "
REM if %errorlevel% == 101 (

REM alter table add column statement here
echo Upgrade installation

REM )

)
