REM Check if its a Clean or an Upgrade Installation

sqli -c "SELECT * FROM SYSTABLE B WHERE B.TABLE_NAME = 'NTFILESYSTEM_STATS';" > out.txt

if %errorlevel% == 101 (

REM Clean Installation for Monitor = Windows NT/2000 File System
REM Schema & PruneCntl Statements for Monitor = Windows NT/2000 File System ,moTypeId = 21013

echo Creating tables NTFILESYSTEM_STATS, NTFILESYSTEM_RT, NTFILESYSTEM_BL
echo Creating Prune Control entries for NTFILESYSTEM_STATS  AND  entries for NTFILESYSTEM_RT
sqli "CREATE TABLE NTFILESYSTEM_STATS (ITEMID int,TIMERECORDED int,USEDPCT int,AVAILABILITY int,PRIMARY KEY ("ITEMID", "TIMERECORDED") WITH HASH SIZE 10);"

REM If the STATS table creation failed exit with errorcode
if %errorlevel% == 1 (
    exit /b 117
)

sqli "create        index NTFILESYSTEM_STATS_N3 on NTFILESYSTEM_STATS (TIMERECORDED);"

sqli "CREATE TABLE NTFILESYSTEM_RT (ITEMID int, FROMTIME int, TOTIME int, USEDPCT_HIGH int, USEDPCT_AVG  int, USEDPCT_LOW  int, AVAILABILITY_HIGH int, AVAILABILITY_AVG  int, AVAILABILITY_LOW  int, NUMPOINTS int, NUMSECS   int, PRIMARY KEY ("ITEMID", "FROMTIME") WITH HASH SIZE 10);"

sqli "create index NTFILESYSTEM_RT_N3 on NTFILESYSTEM_RT (FROMTIME,TOTIME);"

sqli "CREATE TABLE NTFILESYSTEM_BL (ITEMID   int,TIMESLOT int,USEDPCT_HIGH int,USEDPCT_AVG  int,USEDPCT_LOW  int,AVAILABILITY_HIGH int,AVAILABILITY_AVG  int,AVAILABILITY_LOW  int,NUMPOINTS int,NUMWEEKS int,PRIMARY KEY ("ITEMID", "TIMESLOT") WITH HASH SIZE 10);"

sqli "INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTFILESYSTEM_STATS', 'TIMERECORDED', 24);"

sqli "INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTFILESYSTEM_RT', 'FROMTIME', 2160);"

) else (

REM Upgrade Installation for Monitor = Windows NT/2000 File System

REM sqli -c "
REM SELECT * FROM SYSCOLUMN A, SYSTABLE B WHERE A.TABLE_ID = B.TABLE_ID AND B.TABLE_NAME = 'TABLENAME' AND A.COLUMN_NAME = 'COLUMNNAME';
REM "
REM if %errorlevel% == 101 (

REM alter table add column statement here
echo Upgrade installation

REM )

)


REM Check if its a Clean or an Upgrade Installation

sqli -c "SELECT * FROM SYSTABLE B WHERE B.TABLE_NAME = 'NTDISKPERF_STATS';" > out.txt

if %errorlevel% == 101 (

REM Clean Installation for Monitor = Windows NT/2000 Disk Performance
REM Schema & PruneCntl Statements for Monitor = Windows NT/2000 Disk Performance ,moTypeId = 21015

echo Creating tables NTDISKPERF_STATS, NTDISKPERF_RT, NTDISKPERF_BL
echo Creating Prune Control entries for NTDISKPERF_STATS  AND  entries for NTDISKPERF_RT
sqli "CREATE TABLE NTDISKPERF_STATS (ITEMID int,TIMERECORDED int,AVGQLEN int,DISKTIMEPCT int,AVGDISKTRAN int,READTIME int,WRITETIME int,READSEC int,WRITESEC int,READQUEUE int,WRITEQUEUE int,PRIMARY KEY ("ITEMID", "TIMERECORDED") WITH HASH SIZE 10);"

REM If the STATS table creation failed exit with errorcode
if %errorlevel% == 1 (
    exit /b 117
)

sqli "create        index NTDISKPERF_STATS_N3 on NTDISKPERF_STATS (TIMERECORDED);"

sqli "CREATE TABLE NTDISKPERF_RT (ITEMID int, FROMTIME int, TOTIME int, AVGQLEN_HIGH int, AVGQLEN_AVG  int, AVGQLEN_LOW  int, DISKTIMEPCT_HIGH int, DISKTIMEPCT_AVG  int, DISKTIMEPCT_LOW  int, AVGDISKTRAN_HIGH int, AVGDISKTRAN_AVG  int, AVGDISKTRAN_LOW  int, READTIME_HIGH int, READTIME_AVG  int, READTIME_LOW  int, WRITETIME_HIGH int, WRITETIME_AVG  int, WRITETIME_LOW  int, READSEC_HIGH int, READSEC_AVG  int, READSEC_LOW  int, WRITESEC_HIGH int, WRITESEC_AVG  int, WRITESEC_LOW  int, READQUEUE_HIGH int, READQUEUE_AVG  int, READQUEUE_LOW  int, WRITEQUEUE_HIGH int, WRITEQUEUE_AVG  int, WRITEQUEUE_LOW  int, NUMPOINTS int, NUMSECS   int, PRIMARY KEY ("ITEMID", "FROMTIME") WITH HASH SIZE 10);"

sqli "create index NTDISKPERF_RT_N3 on NTDISKPERF_RT (FROMTIME,TOTIME);"

sqli "CREATE TABLE NTDISKPERF_BL (ITEMID   int,TIMESLOT int,AVGQLEN_HIGH int,AVGQLEN_AVG  int,AVGQLEN_LOW  int,DISKTIMEPCT_HIGH int,DISKTIMEPCT_AVG  int,DISKTIMEPCT_LOW  int,AVGDISKTRAN_HIGH int,AVGDISKTRAN_AVG  int,AVGDISKTRAN_LOW  int,READTIME_HIGH int,READTIME_AVG  int,READTIME_LOW  int,WRITETIME_HIGH int,WRITETIME_AVG  int,WRITETIME_LOW  int,READSEC_HIGH int,READSEC_AVG  int,READSEC_LOW  int,WRITESEC_HIGH int,WRITESEC_AVG  int,WRITESEC_LOW  int,READQUEUE_HIGH int,READQUEUE_AVG  int,READQUEUE_LOW  int,WRITEQUEUE_HIGH int,WRITEQUEUE_AVG  int,WRITEQUEUE_LOW  int,NUMPOINTS int,NUMWEEKS int,PRIMARY KEY ("ITEMID", "TIMESLOT") WITH HASH SIZE 10);"

sqli "INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTDISKPERF_STATS', 'TIMERECORDED', 192);"

sqli "INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTDISKPERF_RT', 'FROMTIME', 2160);"

) else (

REM Upgrade Installation for Monitor = Windows NT/2000 Disk Performance

REM sqli -c "
REM SELECT * FROM SYSCOLUMN A, SYSTABLE B WHERE A.TABLE_ID = B.TABLE_ID AND B.TABLE_NAME = 'TABLENAME' AND A.COLUMN_NAME = 'COLUMNNAME';
REM "
REM if %errorlevel% == 101 (

REM alter table add column statement here
echo Upgrade installation

REM )

)

