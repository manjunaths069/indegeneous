#!/bin/csh -f 
source /usr/pronto/bin/.tmcsh
cd $DB
#Prune Period value will be passed as an arg, store it in a variable
#If nothing is passed, default it to 192 (8 days)
if ( $#argv == 0 ) then
    set PRUNE_PERIOD=192
else
    set PRUNE_PERIOD=$1
endif

#Create schema only if it is a new install
/usr/pronto/bin/sqli -c << EOF > /dev/null
SELECT * FROM SYSTABLE B WHERE B.TABLE_NAME = 'NTFILESYSTEM_STATS';
EOF

if ( $status == 101 ) then

#Schema for Monitor = Windows NT/2000 File System ,moTypeId = 21013

echo Creating table NTFILESYSTEM_STATS
/usr/pronto/bin/sqli<< EOF 
CREATE TABLE NTFILESYSTEM_STATS (
ITEMID int,
TIMERECORDED int,
USEDPCT int,
AVAILABILITY int
,PRIMARY KEY ("ITEMID", "TIMERECORDED") WITH HASH SIZE 10
);
create        index NTFILESYSTEM_STATS_N3 on NTFILESYSTEM_STATS (TIMERECORDED);


CREATE TABLE NTFILESYSTEM_RT (
ITEMID int, 
FROMTIME int, 
TOTIME int, 
USEDPCT_HIGH int, 
USEDPCT_AVG  int, 
USEDPCT_LOW  int, 
AVAILABILITY_HIGH int, 
AVAILABILITY_AVG  int, 
AVAILABILITY_LOW  int, 
NUMPOINTS int, 
NUMSECS   int 
,PRIMARY KEY ("ITEMID", "FROMTIME") WITH HASH SIZE 10
);
create        index NTFILESYSTEM_RT_N3 on NTFILESYSTEM_RT (FROMTIME,TOTIME);





CREATE TABLE NTFILESYSTEM_BL (
ITEMID   int,
TIMESLOT int,
USEDPCT_HIGH int,
USEDPCT_AVG  int,
USEDPCT_LOW  int,
AVAILABILITY_HIGH int,
AVAILABILITY_AVG  int,
AVAILABILITY_LOW  int,
NUMPOINTS int,
NUMWEEKS int,
STARTTIME int,
DURATION int,
PRIMARY KEY ("ITEMID", "STARTTIME", "DURATION") WITH HASH SIZE 10
);
create index NTFILESYSTEM_BL_N2 on NTFILESYSTEM_BL ( STARTTIME, DURATION );











CREATE TABLE NTDISKPERF_STATS (
ITEMID int,
TIMERECORDED int,
AVGQLEN int,
DISKTIMEPCT int,
AVGDISKTRAN int,
READTIME int,
WRITETIME int,
READSEC int,
WRITESEC int,
READQUEUE int,
WRITEQUEUE int
,PRIMARY KEY ("ITEMID", "TIMERECORDED") WITH HASH SIZE 10
);
create        index NTDISKPERF_STATS_N3 on NTDISKPERF_STATS (TIMERECORDED);





CREATE TABLE NTDISKPERF_RT (
ITEMID int, 
FROMTIME int, 
TOTIME int, 
AVGQLEN_HIGH int, 
AVGQLEN_AVG  int, 
AVGQLEN_LOW  int, 
DISKTIMEPCT_HIGH int, 
DISKTIMEPCT_AVG  int, 
DISKTIMEPCT_LOW  int, 
AVGDISKTRAN_HIGH int, 
AVGDISKTRAN_AVG  int, 
AVGDISKTRAN_LOW  int, 
NUMPOINTS int, 
NUMSECS   int,
READTIME_HIGH int, 
READTIME_AVG  int, 
READTIME_LOW  int, 
WRITETIME_HIGH int, 
WRITETIME_AVG  int, 
WRITETIME_LOW  int, 
READSEC_HIGH int, 
READSEC_AVG  int, 
READSEC_LOW  int, 
WRITESEC_HIGH int, 
WRITESEC_AVG  int, 
WRITESEC_LOW  int, 
READQUEUE_HIGH int, 
READQUEUE_AVG  int, 
READQUEUE_LOW  int, 
WRITEQUEUE_HIGH int, 
WRITEQUEUE_AVG  int, 
WRITEQUEUE_LOW  int
,PRIMARY KEY ("ITEMID", "FROMTIME") WITH HASH SIZE 10
);
create        index NTDISKPERF_RT_N3 on NTDISKPERF_RT (FROMTIME,TOTIME);





CREATE TABLE NTDISKPERF_BL (
ITEMID   int,
TIMESLOT int,
AVGQLEN_HIGH int,
AVGQLEN_AVG  int,
AVGQLEN_LOW  int,
DISKTIMEPCT_HIGH int,
DISKTIMEPCT_AVG  int,
DISKTIMEPCT_LOW  int,
AVGDISKTRAN_HIGH int,
AVGDISKTRAN_AVG  int,
AVGDISKTRAN_LOW  int,
READTIME_HIGH int,
READTIME_AVG  int,
READTIME_LOW  int,
WRITETIME_HIGH int,
WRITETIME_AVG  int,
WRITETIME_LOW  int,
READSEC_HIGH int,
READSEC_AVG  int,
READSEC_LOW  int,
WRITESEC_HIGH int,
WRITESEC_AVG  int,
WRITESEC_LOW  int,
READQUEUE_HIGH int,
READQUEUE_AVG  int,
READQUEUE_LOW  int,
WRITEQUEUE_HIGH int,
WRITEQUEUE_AVG  int,
WRITEQUEUE_LOW  int,
NUMPOINTS int,
NUMWEEKS int,
STARTTIME int,
DURATION int,
PRIMARY KEY ("ITEMID", "STARTTIME", "DURATION") WITH HASH SIZE 10
);
create index NTDISKPERF_BL_N2 on NTDISKPERF_BL ( STARTTIME, DURATION );


INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTFILESYSTEM_STATS', 'TIMERECORDED', $PRUNE_PERIOD);
INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTFILESYSTEM_RT', 'FROMTIME', 2160);
INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTFILESYSTEM_BL', 'STARTTIME', 2160);

INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTDISKPERF_STATS', 'TIMERECORDED', $PRUNE_PERIOD);
INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTDISKPERF_RT', 'FROMTIME', 2160);
INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTDISKPERF_BL', 'STARTTIME', 2160);
EOF


else
# Handle upgrade of monitor schema like addition of new attribute, here
#/usr/pronto/bin/sqli -c << EOF > /dev/null#Update schema with STARTTIME and DURATION columns
echo Begin upgrading
/usr/pronto/bin/sqli -c << EOF > /dev/null
SELECT * FROM SYSCOLUMN A, SYSTABLE B WHERE A.TABLE_ID = B.TABLE_ID AND B.TABLE_NAME = 'NTFILESYSTEM_BL' AND A.COLUMN_NAME = 'STARTTIME';
EOF
if ( $status == 101 ) then
/usr/pronto/bin/sqli -c << EOF > /dev/null
ALTER TABLE NTFILESYSTEM_BL ADD STARTTIME int;
ALTER TABLE NTFILESYSTEM_BL ADD DURATION int;
ALTER TABLE NTDISKPERF_BL ADD STARTTIME int;
ALTER TABLE NTDISKPERF_BL ADD DURATION int;
INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTFILESYSTEM_BL', 'STARTTIME', 2160);
INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTDISKPERF_BL', 'STARTTIME', 2160);
EOF
endif
echo End upgrading



endif

