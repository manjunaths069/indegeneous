#!/bin/csh -f 
source /usr/pronto/bin/.tmcsh
cd $DB
#Prune Period value will be passed as an arg, store it in a variable
#If nothing is passed, default it to 192 (8 days)
if ( $#argv == 0 ) then
    set PRUNE_PERIOD=192
else
    set PRUNE_PERIOD=$1
endif
/usr/pronto/bin/sqli -c << EOF > /dev/null
SELECT * FROM SYSTABLE B WHERE B.TABLE_NAME = 'NTCPU_STATS';
EOF

if ( $status == 101 ) then

#Schema for Monitor = CPU ,moTypeId = 29351

echo Creating table NTCPU_STATS
/usr/pronto/bin/sqli<< EOF 
CREATE TABLE NTCPU_STATS (
ITEMID int,
TIMERECORDED int,
PPTIME int,
PPREVTIME int,
DPCRATE int,
DPCBPASSPSEC int,
PINTERRUPTTIME int,
PUTIME int,
INTERPSEC int,
DPCQUEUEPSEC int,
PDPCTIME int,
APCQUEUEPSEC int
);
create unique index NTCPU_STATS_U2 on NTCPU_STATS (ITEMID,TIMERECORDED);
create        index NTCPU_STATS_N3 on NTCPU_STATS (TIMERECORDED);


CREATE TABLE NTCPU_RT (
ITEMID int, 
FROMTIME int, 
TOTIME int, 
PPTIME_HIGH int, 
PPTIME_AVG  int, 
PPTIME_LOW  int, 
PPREVTIME_HIGH int, 
PPREVTIME_AVG  int, 
PPREVTIME_LOW  int, 
DPCRATE_HIGH int, 
DPCRATE_AVG  int, 
DPCRATE_LOW  int, 
DPCBPASSPSEC_HIGH int, 
DPCBPASSPSEC_AVG  int, 
DPCBPASSPSEC_LOW  int, 
PINTERRUPTTIME_HIGH int, 
PINTERRUPTTIME_AVG  int, 
PINTERRUPTTIME_LOW  int, 
PUTIME_HIGH int, 
PUTIME_AVG  int, 
PUTIME_LOW  int, 
INTERPSEC_HIGH int, 
INTERPSEC_AVG  int, 
INTERPSEC_LOW  int, 
DPCQUEUEPSEC_HIGH int, 
DPCQUEUEPSEC_AVG  int, 
DPCQUEUEPSEC_LOW  int, 
PDPCTIME_HIGH int, 
PDPCTIME_AVG  int, 
PDPCTIME_LOW  int, 
APCQUEUEPSEC_HIGH int, 
APCQUEUEPSEC_AVG  int, 
APCQUEUEPSEC_LOW  int, 
NUMPOINTS int, 
NUMSECS   int 
);
create unique index NTCPU_RT_U2 on NTCPU_RT (ITEMID,FROMTIME);
create        index NTCPU_RT_N3 on NTCPU_RT (FROMTIME,TOTIME);

CREATE TABLE NTCPU_BL (
ITEMID   int,
TIMESLOT int,
PPTIME_HIGH int,
PPTIME_AVG  int,
PPTIME_LOW  int,
PPREVTIME_HIGH int,
PPREVTIME_AVG  int,
PPREVTIME_LOW  int,
DPCRATE_HIGH int,
DPCRATE_AVG  int,
DPCRATE_LOW  int,
DPCBPASSPSEC_HIGH int,
DPCBPASSPSEC_AVG  int,
DPCBPASSPSEC_LOW  int,
PINTERRUPTTIME_HIGH int,
PINTERRUPTTIME_AVG  int,
PINTERRUPTTIME_LOW  int,
PUTIME_HIGH int,
PUTIME_AVG  int,
PUTIME_LOW  int,
INTERPSEC_HIGH int,
INTERPSEC_AVG  int,
INTERPSEC_LOW  int,
DPCQUEUEPSEC_HIGH int,
DPCQUEUEPSEC_AVG  int,
DPCQUEUEPSEC_LOW  int,
PDPCTIME_HIGH int,
PDPCTIME_AVG  int,
PDPCTIME_LOW  int,
APCQUEUEPSEC_HIGH int,
APCQUEUEPSEC_AVG  int,
APCQUEUEPSEC_LOW  int,
NUMPOINTS int,
NUMWEEKS int,
STARTTIME int,
DURATION int,
PRIMARY KEY ("ITEMID", "STARTTIME", "DURATION") WITH HASH SIZE 10
);
create index NTCPU_BL_N2 on NTCPU_BL ( STARTTIME, DURATION );

INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTCPU_STATS', 'TIMERECORDED', $PRUNE_PERIOD);
INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTCPU_RT', 'FROMTIME', 2160);
INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTCPU_BL', 'STARTTIME', 2160);
EOF
else
# Handle upgrade of monitor schema like addition of new attribute, here

#Update schema with STARTTIME and DURATION columns
echo Begin upgrading
/usr/pronto/bin/sqli -c << EOF > /dev/null
SELECT * FROM SYSCOLUMN A, SYSTABLE B WHERE A.TABLE_ID = B.TABLE_ID AND B.TABLE_NAME = 'NTCPU_BL' AND A.COLUMN_NAME = 'STARTTIME';
EOF
if ( $status == 101 ) then
/usr/pronto/bin/sqli -c << EOF > /dev/null
ALTER TABLE NTCPU_BL ADD STARTTIME int;
ALTER TABLE NTCPU_BL ADD DURATION int;
INSERT INTO PRUNE_CNTL (TABLENAME, TIMECOLUMN, DELTAHOURS) VALUES ('NTCPU_BL', 'STARTTIME', 2160);
EOF
endif
echo End upgrading



endif

